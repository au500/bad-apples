kind: Template
apiVersion: v1
metadata:
  name: filter-spark-job
  annotations:
     description: Create a job using an existing Spark image
labels:
  application: oshinko-spark
  createdBy: template-filter-spark-job
parameters:
- description: The name to use for the job
  name: APPLICATION_NAME
  generate: expression
  from: filter-[a-z0-9]{4}
  required: true
- description: Command line arguments to pass to the application
  name: APP_ARGS
- description: Application main class for jar-based applications
  name: APP_MAIN_CLASS
- description: List of additional spark options to pass to spark-submit (for exmaple --conf property=value --conf property=value). Note, --master and --class are set by the launcher and should not be set here
  required: true
  name: SPARK_OPTIONS
- description: The desired number of successful completions
  name: COMPLETIONS
  value: "1"
  required: true
- description: The name of the spark cluster to run against. The cluster will be created if it does not exist, and a random cluster name will be chosen if this value is left blank.
  name: OSHINKO_CLUSTER_NAME
- description: The name of a stored cluster configuration to use if a cluster is created, default is 'default'.
  name: OSHINKO_NAMED_CONFIG
- description: The name of a configmap to use for the spark configuration of the driver. If this configmap is empty the default spark configuration will be used.
  name: OSHINKO_SPARK_DRIVER_CONFIG
- description: If a cluster is created on-demand, delete the cluster when the application finishes if this option is set to 'true'
  name: OSHINKO_DEL_CLUSTER
  value: "true"
  required: true
- deasciption: image
  name: IMAGE
  value: "radanalyticsio/radanalytics-java-spark"
- description: git URI
  name: GIT_URI
  required: true
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    spec:
      dockerImageRepository: ${APPLICATION_NAME}
      tags:
      - name: latest
      lookupPolicy:
        local: true
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: "master"
          uri: ${GIT_URI}
        type: Git
        secrets:
          - secret:
              name: transactionfilter-secret
      strategy:
        sourceStrategy:
          env:
          - name: APP_FILE
            value: ${APP_FILE}
          forcePull: false
          from:
            kind: DockerImage
            name: radanalyticsio/radanalytics-java-spark
        type: Source
      triggers:
      - imageChange: {}
        type: ImageChange
        type: ConfigChange
      - github:
          secret: "transactionfilter-secret"
        type: GitHub
      - generic:
          secret: "transactionfilter-secret"
        type: Generic
  - apiVersion: batch/v1
    kind: Job
    metadata:
      name: ${APPLICATION_NAME}
    spec:
      parallelism: 1
      completions: 1
      template:
        metadata:
          name: ${JOB_NAME}
        spec:
          containers:
            - name: filter-spark-job
              image: "radanalyticsio/radanalytics-java-spark"
              env:
                - name: OSHINKO_CLUSTER_NAME
                  value: ${OSHINKO_CLUSTER_NAME}
                - name: APP_ARGS
                  value: ${APP_ARGS}
                - name: SPARK_OPTIONS
                  value: ${SPARK_OPTIONS}
                - name: APP_MAIN_CLASS
                  value: ${APP_MAIN_CLASS}
                - name: OSHINKO_DEL_CLUSTER
                  value: ${OSHINKO_DEL_CLUSTER}
                - name: APP_EXIT
                  value: "true"
                - name: OSHINKO_NAMED_CONFIG
                  value: ${OSHINKO_NAMED_CONFIG}
          restartPolicy: OnFailure
